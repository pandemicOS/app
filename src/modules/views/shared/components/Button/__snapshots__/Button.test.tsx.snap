// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Button renders without crashing 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#4A90E2",
      "borderRadius": 4,
      "height": 55,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFF",
              "fontSize": 16,
              "fontWeight": "600",
              "paddingLeft": 12,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "#7C7C7C",
              "fontSize": 12,
              "fontWeight": "600",
              "marginTop": 1,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Button renders without crashing with ActivityIndicator 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#4A90E2",
      "borderRadius": 4,
      "height": 55,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <ActivityIndicator
    animating={true}
    color="#676767"
    hidesWhenStopped={true}
    size="small"
  />
</View>
`;

exports[`Button should render with icon 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#4A90E2",
      "borderRadius": 4,
      "height": 55,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <Image
      source={1}
    />
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFF",
              "fontSize": 16,
              "fontWeight": "600",
              "paddingLeft": 12,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "#7C7C7C",
              "fontSize": 12,
              "fontWeight": "600",
              "marginTop": 1,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;

exports[`Button should render without onPress 1`] = `
<View
  accessible={true}
  isTVSelectable={true}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "backgroundColor": "#4A90E2",
      "borderRadius": 4,
      "height": 55,
      "justifyContent": "center",
      "opacity": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "center",
        "flexDirection": "row",
        "justifyContent": "center",
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#FFF",
              "fontSize": 16,
              "fontWeight": "600",
              "paddingLeft": 12,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
      >
        
      </Text>
      <Text
        style={
          Array [
            Object {
              "color": "#7C7C7C",
              "fontSize": 12,
              "fontWeight": "600",
              "marginTop": 1,
              "paddingRight": 5,
            },
            undefined,
          ]
        }
      />
    </View>
  </View>
</View>
`;
